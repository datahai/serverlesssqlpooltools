/*
Attributes available for logging are at https://docs.microsoft.com/en-us/azure/storage/blobs/monitor-blob-storage-reference
*/

--create and configure new Serverless SQL Pools database
CREATE DATABASE LogAnalysis

USE LogAnalysis

--encryption to allow authentication
CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'dsfads$%zdsfkjsdhlk456hvwegf';

--ensure Synapse workspace has been added as a Storage Blob Data Reader to general purpose storage account
CREATE DATABASE SCOPED CREDENTIAL DataLakeManagedIdentity
WITH IDENTITY='Managed Identity'

--create data source to general purpose storage account
--replace <storage-account> with relevant value
CREATE EXTERNAL DATA SOURCE ExternalDataSourceDataLakeMI
	WITH (
		LOCATION   = 'https://<storage-account>.blob.core.windows.net/insights-logs-storageread',
        CREDENTIAL = DataLakeManagedIdentity
	    );

--enable support for UTF8
ALTER DATABASE LogAnalysis COLLATE Latin1_General_100_BIN2_UTF8;

--create View over the storage logs
CREATE OR ALTER VIEW dbo.vwAnalyseLogs
AS
SELECT
    time,
    resourceId,
    category,
    operationName,
    operationVersion,
    schemaVersion,
    statusCode,
    statusText,
    durationMs,
    callerIpAddress,
    correlationId,
    identity_type,
    identity_tokenHash,
    [location],
    identity_delegatedResource_resourceId,
    properties_accountName,
    properties_serviceType,
    properties_objectKey,
    properties_metricResponseType,
    properties_serverLatencyMs,
    properties_requestHeaderSize,
    properties_responseHeaderSize,
    properties_responseBodySize,
    properties_tlsVersion,
    uri,
    protocol,
    resourceType,
    jsonrows.filepath(1) as SubscriptionID,
    jsonrows.filepath(2) as ResourceGroup,
    jsonrows.filepath(3) as StorageAccount,
    jsonrows.filepath(4) as LogYear,
    jsonrows.filepath(5) as LogMonth,
    jsonrows.filepath(6) as LogDay,
    jsonrows.filepath(7) as LogHour,
    jsonrows.filepath(8) as LogMinute
FROM OPENROWSET
    (
        BULK '/resourceId=/subscriptions/*/resourceGroups/*/providers/Microsoft.Storage/storageAccounts/*/blobServices/default/y=*/m=*/d=*/h=*/m=*/*',
        DATA_SOURCE = 'ExternalDataSourceDataLakeMI',
        FORMAT = 'CSV',
        PARSER_VERSION = '2.0',
        FIELDTERMINATOR = '0x09',
        FIELDQUOTE = '0x0b',
        ROWTERMINATOR = '0x0A' 
    ) WITH (doc NVARCHAR(4000)) AS jsonrows
    CROSS APPLY OPENJSON (doc)
        WITH (  time DATETIME2 '$.time',
                resourceId VARCHAR(500) '$.resourceId',
                category VARCHAR(50) '$.category',
                operationName VARCHAR(100) '$.operationName',
                operationVersion VARCHAR(10) '$.operationVersion',
                schemaVersion VARCHAR(10) '$.schemaVersion',
                statusCode SMALLINT '$.statusCode',
                statusText VARCHAR(100) '$.statusText',
                durationMs INT '$.durationMs',
                callerIpAddress VARCHAR(50) '$.callerIpAddress',
                correlationId VARCHAR(50) '$.correlationId',
                identity_type VARCHAR(100) '$.identity.type',
                identity_tokenHash VARCHAR(100) '$.identity.tokenHash',
                [location] VARCHAR(50) '$.location',
                identity_delegatedResource_resourceId VARCHAR(500) '$.identity.delegatedResource.resourceId',
                properties_accountName VARCHAR(50) '$.properties.accountName',
                properties_serviceType VARCHAR(30) '$.properties.serviceType',
                properties_objectKey VARCHAR(250) '$.properties.objectKey',
                properties_metricResponseType VARCHAR(50) '$.properties.metricResponseType',
                properties_serverLatencyMs INT '$.properties.serverLatencyMs',
                properties_requestHeaderSize INT '$.properties.requestHeaderSize',
                properties_responseHeaderSize INT '$.properties.responseHeaderSize',
                properties_responseBodySize INT '$.properties.responseBodySize',
                properties_tlsVersion VARCHAR(10) '$.properties.tlsVersion',
                uri VARCHAR(500) '$.uri',
                protocol VARCHAR(50) '$.protocol',
                resourceType VARCHAR(250) '$.resourceType'
                )
